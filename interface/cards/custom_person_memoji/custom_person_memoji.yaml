# lovelace_gen

---
person_memoji:
  triggers_update: all
  #aspect_ratio: 1/1
  name: '[[[ return variables.ulm_card_person_name ]]]'
  show_entity_picture: true
  entity_picture: '[[[ return "/local/people/" + variables.ulm_card_person_name + "_away.png" ]]]'
  state:
    - value: "Home"
      styles:
        custom_fields:
          status:
            - color: "rgba(var(--color-green),1)"
          notification:
            - background-color: "rgba(var(--color-green),1)"
      entity_picture: '[[[ return "/local/people/" + variables.ulm_card_person_name + "_home.png" ]]]'
    - value: "Work"
      entity_picture: '[[[ return "/local/people/" + variables.ulm_card_person_name + "_work.png" ]]]'
      styles:
        custom_fields:
          status:
            - color: "rgba(var(--color-blue),1)"
          notification:
            - background-color: "rgba(var(--color-blue),1)"
    - value: "Lost"
      entity_picture: '[[[ return "/local/people/" + variables.ulm_card_person_name + "_lost.png" ]]]'
      styles:
        custom_fields:
          status:
            - color: "rgba(var(--color-purple),1)"
          notification:
            - background-color: "rgba(var(--color-purple),1)"
    - value: "Far Away"
      entity_picture: '[[[ return "/local/people/" + variables.ulm_card_person_name + "_far_away.png" ]]]'
      styles:
        custom_fields:
          status:
            - color: "rgba(var(--color-pink),1)"
          notification:
            - background-color: "rgba(var(--color-pink),1)"
  styles:
    name:
      - align-self: "middle"
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "16px"
      #- margin-left: "6px"
      - text-transform: "capitalize"
      - line-height: 1
    icon:
      - width: 100%
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    grid:
      #- grid-template-areas: '"i status" "n n" "proximity proximity" "activity activity" "batteries batteries"'
      - grid-template-areas: '"i space" "i n" "i status" "i proximity" "i activity" "i batteries"'
      - grid-template-columns: 1fr 2fr
      - grid-template-rows: 1fr min-content min-content min-content min-content min-content
    custom_fields:
      status:
        - align-self: start
        #- justify-self: end
        - justify-self: start
        - font-weight: "bold"
        #- margin-right: "6px"
        - line-height: 1
        - font-size: "16px"
      notification:
        - border-radius: "50%"
        - position: "absolute"
        - left: "20%"
        - top: "16px"
        - height: "26px"
        - width: "26px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "20px"
        - line-height: "20px"
        - background-color: "rgba(var(--color-red),1)"
      proximity:
        - padding-bottom: 0px
        - font-size: "12px"
        - align-self: middle
        - justify-self: start
        - font-weight: "bold"
        - filter: "opacity(40%)"
        #- margin-left: "6px"
      activity:
        - padding-bottom: 0px
        - font-size: "12px"
        - align-self: middle
        - justify-self: start
        - font-weight: "bold"
        - filter: "opacity(40%)"
        #- margin-left: "6px"
      batteries:
        - padding-bottom: 0px
        - font-size: "12px"
        - align-self: middle
        - justify-self: start
        - font-weight: "bold"
        #- margin-left: "6px"
        - '--phone-charge-sensor': >
              [[[
                if ( variables.ulm_card_person_phone_battery) {
                  if (states[variables.ulm_card_person_phone_battery].state <= 20)
                    return "rgba(var(--color-red),1)";
                  else if (states[variables.ulm_card_person_phone_battery].state > 20 && states[variables.ulm_card_person_phone_battery].state <= 60)
                    return "rgba(var(--color-yellow),1)";
                  else
                    return "rgba(var(--color-green),1)";
                }
              ]]]
        - '--watch-charge-sensor': >
              [[[
                if ( variables.ulm_card_person_watch_battery) {
                  if (states[variables.ulm_card_person_watch_battery].state <= 20)
                    return "rgba(var(--color-red),1)";
                  else if (states[variables.ulm_card_person_watch_battery].state > 20 && states[variables.ulm_card_person_watch_battery].state <= 60)
                    return "rgba(var(--color-yellow),1)";
                  else
                    return "rgba(var(--color-green),1)";
                }
              ]]]
        - '--tablet-charge-sensor': >
              [[[
                if ( variables.ulm_card_person_tablet_battery) {
                  if (states[variables.ulm_card_person_tablet_battery].state <= 20)
                    return "rgba(var(--color-red),1)";
                  else if (states[variables.ulm_card_person_tablet_battery].state > 20 && states[variables.ulm_card_person_tablet_battery].state <= 60)
                    return "rgba(var(--color-yellow),1)";
                  else
                    return "rgba(var(--color-green),1)";
                }
              ]]]
        - '--laptop-charge-sensor': >
              [[[
                if ( variables.ulm_card_person_laptop_battery) {
                  if (states[variables.ulm_card_person_laptop_battery].state <= 20)
                    return "rgba(var(--color-red),1)";
                  else if (states[variables.ulm_card_person_laptop_battery].state > 20 && states[variables.ulm_card_person_laptop_battery].state <= 60)
                    return "rgba(var(--color-yellow),1)";
                  else
                    return "rgba(var(--color-green),1)";
                }
              ]]]
  custom_fields:
    notification: >
      [[[
        let icon = 'mdi:map-marker';
        if (states[entity.entity_id].state == 'Home') {
          icon = 'mdi:home-variant'
        }
        else if (states[entity.entity_id].state == 'Work') {
          icon = 'mdi:office-building'
        }
        else if (states[entity.entity_id].state == 'Lost') {
          icon = 'mdi:car'
        }
        else if (states[entity.entity_id].state == 'Far Away') {
          icon = 'mdi:airplane'
        }
        return '<ha-icon icon="' + icon + '" style="width: 18px; height: 18px; color: var(--primary-background-color);"></ha-icon>';
      ]]]
    status: >-
      [[[
        return `<span>${entity.state}</span>`
      ]]]
    activity: >-
      [[[
        let activity = '';

        if ( variables.ulm_card_person_steps) {
          activity +=
          `<ha-icon
            icon="mdi:walk"
            style="width: 12px; height: 12px; bottom: 1px; position: relative;">
            </ha-icon>
            <span>${states[variables.ulm_card_person_steps].state} steps</span>
            `;
        }
        if ( variables.ulm_card_person_distance_walked) {
          var distance = states[variables.ulm_card_person_distance_walked].state;
          distance = (distance / 1609).toFixed(2);
          activity +=
          `<span>| ${distance} miles</span>`;
        }
        return activity;
      ]]]
    proximity: >-
      [[[
        if ( variables.ulm_card_person_proximity) {
          return `<ha-icon
          icon="mdi:map-marker-distance"
          style="width: 12px; height: 12px; bottom: 1px; position: relative;">
          </ha-icon>  <span>\<span>${states[variables.ulm_card_person_proximity].state} miles away</span></span>`
        }
        else {
          return null;
        }
      ]]]
    batteries: >-
      [[[
        let batteryStates = '';

        if ( variables.ulm_card_person_phone_battery) {
          batteryStates +=
          `<ha-icon
            icon="mdi:cellphone"
            style="width: 12px; height: 12px; bottom: 1px; position: relative; color: var(--phone-charge-sensor);">
            </ha-icon><span style="margin-right:6px; color: var(--phone-charge-sensor);">${states[variables.ulm_card_person_phone_battery].state}%</span>`;
        }
        if ( variables.ulm_card_person_tablet_battery) {
          batteryStates +=
          `<ha-icon
            icon="mdi:tablet-android"
            style="width: 12px; height: 12px; bottom: 1px; position: relative; color: var(--tablet-charge-sensor);">
            </ha-icon><span style="margin-right:6px; color: var(--tablet-charge-sensor);">${states[variables.ulm_card_person_tablet_battery].state}%</span>`;
        }
        if ( variables.ulm_card_person_watch_battery) {
          batteryStates +=
          `<ha-icon
            icon="mdi:watch-variant"
            style="width: 12px; height: 12px; bottom: 1px; position: relative; color: var(--watch-charge-sensor);">
            </ha-icon><span style="margin-right:6px; color: var(--watch-charge-sensor);">${states[variables.ulm_card_person_watch_battery].state}%</span>`;
        }
        if ( variables.ulm_card_person_laptop_battery) {
          batteryStates +=
          `<ha-icon
            icon="mdi:laptop"
            style="width: 12px; height: 12px; bottom: 1px; position: relative; color: var(--laptop-charge-sensor);">
            </ha-icon><span style="margin-right:6px; color: var(--laptop-charge-sensor);">${states[variables.ulm_card_person_laptop_battery].state}%</span>`;
        }
        return batteryStates;
      ]]]
  tap_action:
    action: none