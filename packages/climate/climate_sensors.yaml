sensor:
  - platform: template
    sensors:
      # TARGET TEMPERATURES - USED IN AUTOMATIONS
      bedroom_target_temperature:
        friendly_name: "Target Temperature - Bedrooms"
        value_template: >
          {% if now().hour >= 22 or now().hour < 6 %}
            14
          {% else %}
            20
          {% endif %}
        unit_of_measurement: "°C"
      room_target_temperature:
        friendly_name: "Target Temperature - Rooms"
        value_template: >
          {% if now().hour >= 22 or now().hour < 6 %}
            10
          {% else %}
            20
          {% endif %}
        unit_of_measurement: "°C"
      unoccupied_target_temperature:
        friendly_name: "Target Temperature - Rooms"
        value_template: 8
        unit_of_measurement: "°C"

      # KITCHEN
      kitchen_temperature:
        friendly_name: "Kitchen Temperature"
        value_template: "{{ state_attr('climate.kitchen', 'current_temperature') }}"
        unit_of_measurement: "°C"
      kitchen_target_temperature:
        friendly_name: "Kitchen Target Temperature"
        value_template: "{{ state_attr('climate.kitchen', 'temperature') }}"
        unit_of_measurement: "°C"

      # DINING ROOM
      dining_room_temperature:
        friendly_name: "Dining Room Temperature"
        value_template: "{{ state_attr('climate.dining_room', 'current_temperature') }}"
        unit_of_measurement: "°C"

      # LOUNGE
      lounge_temperature:
        friendly_name: "Lounge Temperature"
        value_template: "{{ state_attr('climate.lounge', 'current_temperature') }}"
        unit_of_measurement: "°C"
      lounge_target_temperature:
        friendly_name: "Lounge Target Temperature"
        value_template: "{{ state_attr('climate.lounge', 'temperature') }}"
        unit_of_measurement: "°C"

      # NOOK
      nook_temperature:
        friendly_name: "Nook Temperature"
        value_template: "{{ state_attr('climate.nook', 'current_temperature') }}"
        unit_of_measurement: "°C"
      # nook_target_temperature:
      #   friendly_name: "Nook Target Temperature"
      #   value_template: "{{ state_attr('climate.nook', 'temperature') }}"
      #   unit_of_measurement: "°C"

      # TOILET
      downstairs_toilet_temperature:
        friendly_name: "Downstairs Toilet Temperature"
        value_template: "{{ state_attr('climate.downstairs_toilet', 'current_temperature') }}"
        unit_of_measurement: "°C"
      downstairs_toilet_target_temperature:
        friendly_name: "Downstairs Toilet Target Temperature"
        value_template: "{{ state_attr('climate.downstairs_toilet', 'temperature') }}"
        unit_of_measurement: "°C"

      # BEDROOM
      master_bedroom_temperature:
        friendly_name: "Master Bedroom Temperature"
        value_template: "{{ state_attr('climate.master_bedroom', 'current_temperature') }}"
        unit_of_measurement: "°C"
      master_bedroom_target_temperature:
        friendly_name: "Master Bedroom Target Temperature"
        value_template: "{{ state_attr('climate.master_bedroom', 'temperature') }}"
        unit_of_measurement: "°C"

      # GUEST BEDROOM
      guest_bedroom_temperature:
        friendly_name: "Guest Bedroom Temperature"
        value_template: "{{ state_attr('climate.guest_bedroom', 'current_temperature') }}"
        unit_of_measurement: "°C"
      guest_bedroom_target_temperature:
        friendly_name: "Guest Bedroom Target Temperature"
        value_template: "{{ state_attr('climate.guest_bedroom', 'temperature') }}"
        unit_of_measurement: "°C"

      # MAN CAVE
      man_cave_temperature:
        friendly_name: "Man Cave Temperature"
        value_template: "{{ state_attr('climate.man_cave', 'current_temperature') }}"
        unit_of_measurement: "°C"
      man_cave_target_temperature:
        friendly_name: "Man Cave Target Temperature"
        value_template: "{{ state_attr('climate.man_cave', 'temperature') }}"
        unit_of_measurement: "°C"

      # SARAH'S OFFICE
      sarahs_office_temperature:
        friendly_name: "Sarah's Office Temperature"
        value_template: "{{ state_attr('climate.sarahs_office', 'current_temperature') }}"
        unit_of_measurement: "°C"
      sarahs_office_target_temperature:
        friendly_name: "Sarah's Office Target Temperature"
        value_template: "{{ state_attr('climate.sarahs_office', 'temperature') }}"
        unit_of_measurement: "°C"

      # BATHROOMS
      en_suite_temperature:
        friendly_name: "En Suite Temperature"
        value_template: "{{ state_attr('climate.en_suite', 'current_temperature') }}"
        unit_of_measurement: "°C"

      bathroom_temperature:
        friendly_name: "Bathroom Temperature"
        value_template: "{{ state_attr('climate.bathroom', 'current_temperature') }}"
        unit_of_measurement: "°C"

      # TODO: Add in a boost if we are on our way home and its cold
      # TODO: Add ina clothes drying mode
      # TODO: Need methods to override
      # TODO: If a rad has not been on for a whiel and it's cold, turn it on for 2 hrs to warm up the room and prevent damp
