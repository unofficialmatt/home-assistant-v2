automation:
  - alias: Master Bedroom - turn on lights
    id: "1701120535"
    description: "Turns on Master Bedroom Lights when motion is detected"
    trigger:
      - platform: state
        entity_id: binary_sensor.master_bedroom_occupancy
        to: "on"
        # TODO: Only if it's dark
        # TODO: What if room is already occupied?
    condition:
      condition: and
      conditions:
        # 1. The lights are not already on
        - condition: state
          entity_id: light.master_bedroom
          state: "off"
        # 2. Sleep mode is currently set to Off
        - condition: template
          value_template: "{{ float(states('input_number.master_bedroom_bedtime_status')) == 0.0 }}"

    action:
      - service: light.turn_on
        entity_id: light.master_bedroom

  # TODO: Nice if it has scenes - choose, if bedtime do X, otherwise do Y

  - alias: Master Bedroom - turn off lights
    id: "1701120536"
    description: "Turns off Master Bedroom Lights when occupancy is no longer detected"
    trigger:
      - platform: state
        entity_id: binary_sensor.master_bedroom_occupancy
        to: "off"
        for:
          minutes: 5
    condition:
      # 1. Sleep mode is currently set to Off
      - condition: template
        value_template: "{{ float(states('input_number.master_bedroom_bedtime_status')) == 0.0 }}"
    action:
      - service: light.turn_off
        entity_id: light.master_bedroom
        data:
          transition: 5

  - alias: Master Bedroom - turn on radiator
    id: "1701120537"
    description: "Turns on Master Bedroom Radiator when occupancy is detected, with a temperature dependent on the time of day"
    trigger:
      - platform: time_pattern
        minutes: "/5"
      - platform: state
        entity_id: binary_sensor.master_bedroom_occupancy
        to: "on"
    condition:
      condition: and
      conditions:
        # 1. The room is occupied
        - condition: state
          entity_id: binary_sensor.master_bedroom_occupancy
          state: "on"
        # 2. It's cold outside
        # - condition: numeric_state
        #   entity_id: sensor.weatherbit_apparent_temperature
        #   below: 8
        # 3. The temperature in the room is lower than the target temperature by 0.5 degrees or higher than the target temperature by 0.5 degrees.
        # Otherwise the radiator will stay on a higher temperature than the target temperature, and the room will get too hot
        - condition: or
          conditions:
            - condition: template
              value_template: "{{ states('sensor.master_bedroom_temperature') | float < states('sensor.bedroom_target_temperature') | float - 0.5 }}"
            - condition: template
              value_template: "{{ states('sensor.master_bedroom_temperature') | float > states('sensor.bedroom_target_temperature') | float + 0.5 }}"
        # 4. The target temperature of the radiator does not already match the target temperature we want (prevents this automation running every 5 mins)
        - condition: template
          value_template: "{{ state_attr('climate.master_bedroom', 'temperature') | float != states('sensor.bedroom_target_temperature') | float }}"
    action:
      - service: climate.set_temperature
        data_template:
          temperature: >
            {{ states('sensor.bedroom_target_temperature') | int }}
        target:
          entity_id: climate.master_bedroom

  - alias: Master Bedroom - turn off radiator
    id: "1701120538"
    description: "Turns off Master Bedroom Radiator when occupancy is not detected for 10 minutes"
    trigger:
      - platform: state
        entity_id: binary_sensor.master_bedroom_occupancy
        to: "off"
        for:
          minutes: 10
    action:
      - service: climate.set_temperature
        data_template:
          temperature: "{{ states('sensor.unoccupied_target_temperature') | int }}"
        target:
          entity_id: climate.master_bedroom
